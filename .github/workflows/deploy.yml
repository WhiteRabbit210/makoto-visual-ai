name: Deploy Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/layers/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ環境'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  AWS_REGION: ap-northeast-1

jobs:
  # Lambda Layer デプロイ
  deploy-lambda-layer:
    name: Deploy Lambda Layer
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
      
      - name: Python セットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: AWS 認証設定
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Layer ビルド
        run: |
          cd backend/layers/common
          ./build.sh
      
      - name: Layer デプロイ
        run: |
          cd backend/layers/common
          ENVIRONMENT=${{ github.event.inputs.environment || 'dev' }}
          ./deploy.sh $ENVIRONMENT ${{ env.AWS_REGION }}
      
      - name: デプロイ情報保存
        run: |
          cd backend/layers/common
          cat layer-config.json
      
      - name: Slack 通知
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Lambda Layer デプロイ: ${{ job.status }}
            環境: ${{ github.event.inputs.environment || 'dev' }}
            実行者: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true

  # タグ付け
  tag-release:
    name: Tag Release
    runs-on: ubuntu-latest
    needs: deploy-lambda-layer
    if: github.event.inputs.environment == 'prod' || github.ref == 'refs/heads/main'
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: バージョン取得
        id: version
        run: |
          VERSION=$(cat backend/layers/common/layer.yaml | grep 'version:' | head -1 | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: タグ作成
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a "layer-v${{ steps.version.outputs.version }}" -m "Lambda Layer v${{ steps.version.outputs.version }}"
          git push origin "layer-v${{ steps.version.outputs.version }}"
        continue-on-error: true

  # ドキュメント更新
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: deploy-lambda-layer
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: チェックアウト
        uses: actions/checkout@v4
      
      - name: デプロイ履歴更新
        run: |
          echo "## デプロイ履歴" >> docs/deployment-history.md
          echo "" >> docs/deployment-history.md
          echo "- $(date '+%Y-%m-%d %H:%M:%S') - Lambda Layer デプロイ" >> docs/deployment-history.md
          echo "  - 環境: ${{ github.event.inputs.environment || 'dev' }}" >> docs/deployment-history.md
          echo "  - 実行者: ${{ github.actor }}" >> docs/deployment-history.md
          echo "  - コミット: ${{ github.sha }}" >> docs/deployment-history.md
      
      - name: 変更をコミット
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docs/deployment-history.md
          git commit -m "docs: デプロイ履歴を更新 [skip ci]" || true
          git push
        continue-on-error: true